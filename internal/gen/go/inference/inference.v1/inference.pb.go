// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: inference.proto

package inferencev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceRequest) Reset() {
	*x = InferenceRequest{}
	mi := &file_inference_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceRequest) ProtoMessage() {}

func (x *InferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inference_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceRequest.ProtoReflect.Descriptor instead.
func (*InferenceRequest) Descriptor() ([]byte, []int) {
	return file_inference_proto_rawDescGZIP(), []int{0}
}

func (x *InferenceRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type InferenceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*InferenceResponse_Progress
	//	*InferenceResponse_Result
	Payload       isInferenceResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceResponse) Reset() {
	*x = InferenceResponse{}
	mi := &file_inference_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceResponse) ProtoMessage() {}

func (x *InferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inference_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceResponse.ProtoReflect.Descriptor instead.
func (*InferenceResponse) Descriptor() ([]byte, []int) {
	return file_inference_proto_rawDescGZIP(), []int{1}
}

func (x *InferenceResponse) GetPayload() isInferenceResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *InferenceResponse) GetProgress() *Progress {
	if x != nil {
		if x, ok := x.Payload.(*InferenceResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *InferenceResponse) GetResult() *Result {
	if x != nil {
		if x, ok := x.Payload.(*InferenceResponse_Result); ok {
			return x.Result
		}
	}
	return nil
}

type isInferenceResponse_Payload interface {
	isInferenceResponse_Payload()
}

type InferenceResponse_Progress struct {
	Progress *Progress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type InferenceResponse_Result struct {
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*InferenceResponse_Progress) isInferenceResponse_Payload() {}

func (*InferenceResponse_Result) isInferenceResponse_Payload() {}

type Progress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Percent       int32                  `protobuf:"varint,1,opt,name=percent,proto3" json:"percent,omitempty"`
	Step          string                 `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Progress) Reset() {
	*x = Progress{}
	mi := &file_inference_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_inference_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_inference_proto_rawDescGZIP(), []int{2}
}

func (x *Progress) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Progress) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type Result struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ProbabilityOfPathology float32                `protobuf:"fixed32,1,opt,name=probability_of_pathology,json=probabilityOfPathology,proto3" json:"probability_of_pathology,omitempty"` // вероятность наличия патологии
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_inference_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_inference_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_inference_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetProbabilityOfPathology() float32 {
	if x != nil {
		return x.ProbabilityOfPathology
	}
	return 0
}

var File_inference_proto protoreflect.FileDescriptor

const file_inference_proto_rawDesc = "" +
	"\n" +
	"\x0finference.proto\x12\tinference\"/\n" +
	"\x10InferenceRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\"~\n" +
	"\x11InferenceResponse\x121\n" +
	"\bprogress\x18\x01 \x01(\v2\x13.inference.ProgressH\x00R\bprogress\x12+\n" +
	"\x06result\x18\x02 \x01(\v2\x11.inference.ResultH\x00R\x06resultB\t\n" +
	"\apayload\"8\n" +
	"\bProgress\x12\x18\n" +
	"\apercent\x18\x01 \x01(\x05R\apercent\x12\x12\n" +
	"\x04step\x18\x02 \x01(\tR\x04step\"B\n" +
	"\x06Result\x128\n" +
	"\x18probability_of_pathology\x18\x01 \x01(\x02R\x16probabilityOfPathology2W\n" +
	"\tInference\x12J\n" +
	"\vDoInference\x12\x1b.inference.InferenceRequest\x1a\x1c.inference.InferenceResponse0\x01B\x1aZ\x18inference.v1;inferencev1b\x06proto3"

var (
	file_inference_proto_rawDescOnce sync.Once
	file_inference_proto_rawDescData []byte
)

func file_inference_proto_rawDescGZIP() []byte {
	file_inference_proto_rawDescOnce.Do(func() {
		file_inference_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inference_proto_rawDesc), len(file_inference_proto_rawDesc)))
	})
	return file_inference_proto_rawDescData
}

var file_inference_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_inference_proto_goTypes = []any{
	(*InferenceRequest)(nil),  // 0: inference.InferenceRequest
	(*InferenceResponse)(nil), // 1: inference.InferenceResponse
	(*Progress)(nil),          // 2: inference.Progress
	(*Result)(nil),            // 3: inference.Result
}
var file_inference_proto_depIdxs = []int32{
	2, // 0: inference.InferenceResponse.progress:type_name -> inference.Progress
	3, // 1: inference.InferenceResponse.result:type_name -> inference.Result
	0, // 2: inference.Inference.DoInference:input_type -> inference.InferenceRequest
	1, // 3: inference.Inference.DoInference:output_type -> inference.InferenceResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_inference_proto_init() }
func file_inference_proto_init() {
	if File_inference_proto != nil {
		return
	}
	file_inference_proto_msgTypes[1].OneofWrappers = []any{
		(*InferenceResponse_Progress)(nil),
		(*InferenceResponse_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inference_proto_rawDesc), len(file_inference_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inference_proto_goTypes,
		DependencyIndexes: file_inference_proto_depIdxs,
		MessageInfos:      file_inference_proto_msgTypes,
	}.Build()
	File_inference_proto = out.File
	file_inference_proto_goTypes = nil
	file_inference_proto_depIdxs = nil
}
